import React from 'react';
import type { Document } from './DocumentBoard';
import { useTheme } from '../contexts/ThemeContext';

export interface DocumentCardProps {
  document: Document;
  onClick?: (document: Document) => void;
}

export const DocumentCard: React.FC<DocumentCardProps> = ({ document, onClick }) => {
  const { theme } = useTheme();

  const getPhaseColor = (phase?: string) => {
    switch (phase) {
      case 'draft':
      case 'todo':
        return {
          backgroundColor: theme.colors.status.draft + '20',
          color: theme.colors.status.draft,
        };
      case 'review':
      case 'doing':
      case 'active':
        return {
          backgroundColor: theme.colors.status.active + '20',
          color: theme.colors.status.active,
        };
      case 'published':
      case 'completed':
        return {
          backgroundColor: theme.colors.status.completed + '20',
          color: theme.colors.status.completed,
        };
      case 'decided':
        return {
          backgroundColor: theme.colors.interactive.primary + '20',
          color: theme.colors.interactive.primary,
        };
      case 'superseded':
        return {
          backgroundColor: theme.colors.interactive.danger + '20',
          color: theme.colors.interactive.danger,
        };
      default:
        return {
          backgroundColor: theme.colors.status.draft + '20',
          color: theme.colors.status.draft,
        };
    }
  };

  const formatDate = (timestamp: number) => {
    try {
      return new Date(timestamp * 1000).toLocaleDateString();
    } catch {
      return 'Invalid date';
    }
  };

  const phaseStyle = getPhaseColor(document.phase);

  return (
    <div
      className={`
        overflow-hidden transition-all duration-200 shadow-lg
        ${onClick ? 'cursor-pointer hover:shadow-xl' : ''}
      `}
      style={{
        backgroundColor: theme.colors.background.elevated,
        border: 'none',
        width: '95%',
        margin: '0 auto',
        minHeight: '120px',
        boxShadow: '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',
        borderRadius: '18px',
      }}
      onClick={() => onClick?.(document)}
      onMouseEnter={(e) => {
        if (onClick) {
          e.currentTarget.style.boxShadow = '0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05)';
        }
      }}
      onMouseLeave={(e) => {
        if (onClick) {
          e.currentTarget.style.boxShadow = '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)';
        }
      }}
    >
      {/* Colored Header Bar with Short Code */}
      <div 
        className="py-3 flex items-center justify-between"
        style={{
          backgroundColor: theme.colors.interactive.primary,
          color: theme.colors.text.inverse,
          paddingLeft: '24px',
          paddingRight: '24px',
        }}
      >
        <span className="text-xs font-mono font-bold">
          {document.short_code}
        </span>
        <span className="text-xs font-bold">
          {document.document_type.charAt(0).toUpperCase()}
        </span>
      </div>

      {/* Card Content */}
      <div 
        className="py-4"
        style={{
          paddingLeft: '24px',
          paddingRight: '24px',
        }}
      >
        {/* Title */}
        <h4 
          className="font-semibold mb-3 text-sm leading-tight"
          style={{ 
            color: theme.colors.text.primary,
            display: '-webkit-box',
            WebkitLineClamp: 2,
            WebkitBoxOrient: 'vertical',
            overflow: 'hidden',
            minHeight: '2.5rem',
          }}
        >
          {document.title}
        </h4>

        {/* Footer with Phase and Date */}
        <div className="flex items-center justify-between">
          {/* Phase */}
          {document.phase && (
            <span
              className="px-2 py-1 rounded-full text-xs font-medium"
              style={{
                backgroundColor: phaseStyle.backgroundColor,
                color: phaseStyle.color,
                fontSize: '10px',
              }}
            >
              {document.phase}
            </span>
          )}
          
          {/* Date */}
          <div className="text-xs" style={{ color: theme.colors.text.tertiary }}>
            {formatDate(document.updated_at)}
          </div>
        </div>
      </div>
    </div>
  );
};